provider "aws" {
  region  = "${var.aws_region}"
}

data "terraform_remote_state" "vpc" {
  backend = "local"

  config = {
    path = "${path.module}/${var.vpc_state_path}"
  }
}

resource "aws_instance" "windows-dc" {
  ami           = "${var.dc_ami}"
  instance_type = "t3.medium"
  key_name = "${var.keyname}"
  subnet_id = "${data.terraform_remote_state.vpc.outputs.SDP-private-subnet-id}"
  security_groups = ["${data.terraform_remote_state.vpc.outputs.SDP-private-SG-id}"]
  associate_public_ip_address = true
  get_password_data = "true"
  tags = {
    Name  = "${var.namespace}-WindowsDC"
    env = "${var.envtag}"
    owner = "${var.ownertag}"
   }

    user_data = <<EOF
<powershell>
    net user ${var.windows_localadmin} '${var.windows_localadmin_pw}' /add /y
    net localgroup administrators ${var.windows_localadmin} /add
    winrm quickconfig -q
    winrm set winrm/config/winrs '@{MaxMemoryPerShellMB="300"}'
    winrm set winrm/config '@{MaxTimeoutms="1800000"}'
    winrm set winrm/config/service '@{AllowUnencrypted="true"}'
    winrm set winrm/config/service/auth '@{Basic="true"}'
    netsh advfirewall firewall add rule name="WinRM 5985" protocol=TCP dir=in localport=5985 action=allow
    netsh advfirewall firewall add rule name="WinRM 5986" protocol=TCP dir=in localport=5986 action=allow
    net stop winrm
    sc.exe config winrm start=auto
    net start winrm
    
    # Rename computer
    Rename-Computer -NewName ${var.dc_hostname}

    # Restart computer
    Restart-Computer
</powershell>
EOF

# Copy the scripts
  provisioner "file" {
    source      = "scripts"
    destination = "c:/windows/temp"    
  }

  # Install AD
  provisioner "remote-exec" {
      inline = [         
          "powershell.exe -ExecutionPolicy Bypass -File C:/windows/temp/domain-controller.ps1 -domain ${var.dc_domain}"
      ]
  }
  
  # Setup users
  provisioner "remote-exec" {
      inline = [         
          "powershell.exe -ExecutionPolicy Bypass -File C:/windows/temp/domain-controller-configure.ps1"
      ]
  }

  # Setup CA
  provisioner "remote-exec" {
      inline = [
          "powershell.exe -ExecutionPolicy Bypass -File C:/windows/temp/ca.ps1"
      ]
  }

  connection {
    host = "${self.public_ip}"
    type = "winrm"
    timeout = "15m"
    user = "${var.windows_localadmin}"
    password = "${var.windows_localadmin_pw}"
   }
}

#resource "aws_eip" "windows-dc" {
#  instance = aws_instance.windows-dc.id
#  vpc      = true
#}

# Export Terraform variable values to an Ansible var_file
resource "local_file" "tf_ansible_vars_file_new" {
  content = <<-DOC
    # Ansible vars_file containing variable values from Terraform.
    # Generated by Terraform configuration.

    tf_dc_hostname: ${var.dc_hostname}
    tf_dc_domain: ${var.dc_domain}
    tf_dc_public_ip: ${aws_instance.windows-dc.public_ip}
    tf_dc_private_ip: ${aws_instance.windows-dc.private_ip}
    tf_dc_windows_localadmin: ${var.windows_localadmin}
    tf_dc_windows_localadmin_pw: ${var.windows_localadmin_pw}
    DOC
  filename = "./tf_ansible_vars_file.yml"
}
