---
- hosts: primary_controller
  gather_facts: no
  vars_files:
    - config.cfg
    - ../windowsDC/tf_ansible_vars_file.yml
    - tf_ansible_vars_file.yml
    - api.yml
  vars:
    controller_api_url: "https://{{ tf_cnt1_public_ip }}:8443/admin"

  tasks:

  # - name: Get entitlement
  #   uri:
  #     url: "{{ controller_api_url }}/entitlements"
  #     method: GET
  #     validate_certs: no
  #     body_format: json
  #     body: ""
  #     timeout: 10
  #     headers:
  #       Accept: "application/vnd.appgate.peer-v14+json"
  #       Authorization: "Bearer {{ apitoken }}"
  #   register: result

  # - name: Dump
  #   debug: msg="{{ result }}"

  - name:  Create UUID for webserver entitlement
    set_fact: webent_id="{{ 99999999 | random | to_uuid }}"
        
  - name:  Create UUID for DNS entitlement
    set_fact: dnsent_id="{{ 99999999 | random | to_uuid }}"

  - name:  Wait for UI to come up
    wait_for:
      port: 8443
      state: started


  - name: Add webserver entitlement
    uri:
      url: "{{ controller_api_url }}/entitlements"
      method: POST
      validate_certs: no
      body_format: json
      body: "{{ post_data | to_json }}"
      timeout: 10
      headers:
       Accept: "application/vnd.appgate.peer-v14+json"
       Authorization: "Bearer {{ apitoken }}"
    vars:
      post_data:
        "id": "{{ webent_id }}"
        "name": "Linux Webserver"
        "notes": "Allows access to internal-only webserver"
        "site": "8a4add9e-0e99-4bb1-949c-c9faf9a49ad4"
        actions:
        - action: allow
          hosts:
          - "{{ tf_webserver_private_ip }}"
          ports:
          - "80"
          - "443"
          subtype: tcp_up
          type: IpAccess
        conditions:
        - ee7b7e6f-e904-4b4f-a5ec-b3bef040643e
    register: result
    until: result.status == 200 or result.status != 409
    retries: 30
    delay: 10

  - name: Add dns server entitlement
    uri:
      url: "{{ controller_api_url }}/entitlements"
      method: POST
      validate_certs: no
      body_format: json
      body: "{{ post_data | to_json }}"
      timeout: 10
      headers:
       Accept: "application/vnd.appgate.peer-v14+json"
       Authorization: "Bearer {{ apitoken }}"
    vars:
      post_data:
        "id": "{{ dnsent_id }}"
        "name": "DNS Server"
        "notes": "Allows access to internal-only DNS server"
        "site": "8a4add9e-0e99-4bb1-949c-c9faf9a49ad4"
        actions:
        - action: allow
          hosts:
          - "{{ tf_dc_private_ip }}"
          ports:
          - "53"
          subtype: udp_up
          type: IpAccess
        conditions:
        - ee7b7e6f-e904-4b4f-a5ec-b3bef040643e
    register: result
    until: result.status == 200 or result.status != 409
    retries: 30
    delay: 10



  - name: Create Intranet Users Policy
    uri:
      url: "{{ controller_api_url }}/policies"
      method: POST
      validate_certs: no
      body_format: json
      body: "{{ post_data | to_json }}"
      timeout: 10
      headers:
       Accept: "application/vnd.appgate.peer-v14+json"
       Authorization: "Bearer {{ apitoken }}"
    vars:
      post_data:
        "id": "{{ dnsent_id }}"
        "name": "Intranet Users"
        "notes": "Allows access to internal-only servers"
        "expression": "//Generated by criteria builder, Operator: and\nvar result = false;\nif/*claims.user.groups*/(claims.user.groups && claims.user.groups.containsText(\"intranetusers\"))/*end claims.user.groups*/ { result = true; } else { return false; }\nreturn result;"
        entitlements:
        - "{{ webent_id }}"
        - "{{ dnsent_id }}"
    register: result
    until: result.status == 200 or result.status != 409
    retries: 30
    delay: 10    

    
  # - name: Dump
  #   debug: msg="{{ result }}"

